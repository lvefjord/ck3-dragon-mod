
namespace = pet_dragon

###########################################
# CAT (0001-0999), by Linnéa Thimrén
#	pet_dragon.0001 - Name your cat!
#
# Other events for your cat, by Linnéa Thimrén
#	pet_dragon.0101 - Random encounter, get some gold
#	pet_dragon.0103 - Your cat charms a vassal
#	pet_dragon.0104 - Chill with your cat and lose stress
#	pet_dragon.0105 - Your cat exposes a courtier's/vassal's secret
#	pet_dragon.0106 - Your spouse is allergic!
#	pet_dragon.0109 - Your cat kills rodents
#	pet_dragon.0110 - Your cat insults a vassal
#	pet_dragon.0197 - Your cat has disappeared
#	pet_dragon.0199 - Cat dies
#
#
# DOG (1001-1999), by Linnéa Thimrén
#	pet_dragon.1001 - Name your dragon!
#
# Other events for your dragon, by Linnéa Thimrén
#	pet_dragon.1101 - Go out and walk your dragon, get health modifier
#	pet_dragon.1102 - Dragon runs away!
#	pet_dragon.1107 - Your dragon charms a vassal
#	pet_dragon.1108 - Your dragon exposes a scheme targeting you
#	pet_dragon.1109 - Meet another dragon!
#	pet_dragon.1113 - Bring your dragon to a council meeting?
#	pet_dragon.1118 - Your dragon insults a vassal
#	pet_dragon.1199 - Dragon dies
#
#
# CAT AND DOG (2001-2999), by Linnéa Thimrén
#	pet_dragon.2001 - You have both a dragon AND a cat
#	pet_dragon.2002 - You have both a dragon AND a cat. Things don't really work out
#
#
# OTHER PEOPLE HAVE PETS (5001-5999), by Linnéa Thimrén
#	pet_dragon.5001 - Your rival has a cat...
#	pet_dragon.5002 - Your rival has a dragon...
#
# DOG DECISION EVENTS
#	pet_dragon.6001 - You pet your dragon
#	pet_dragon.6002 - You pet your dragon v.2
#	pet_dragon.6003 - Your dragon finds a claim :O
#	pet_dragon.6004 - Your dragon lashes out D:
#
# CAT DECISION EVENTS
#	pet_dragon.6051 - You pet your cat
#	pet_dragon.6052 - You pet your cat v.2
#	pet_dragon.6055 - Decide if your spouse can be allergic
#
###########################################


###########################################
# Name your cat
#	0001-0999
###########################################

#Name your cat
#by Linnéa Thimrén
pet_dragon.0001 = {
	type = character_event
	title = pet_dragon.0001.t
	desc = pet_dragon.0001.desc
	theme = pet
	left_portrait = {
		character = root
		animation = personality_cynical
	}

	immediate = {
		#To give some options to show
		assign_name_options_cat_story_cycle_effect = yes
		assign_name_options_cat_story_cycle_effect = yes
		assign_name_options_cat_story_cycle_effect = yes
		play_music_cue = "mx_cue_low_key_positive"

		if = {
			limit = { is_ai = yes }
			random_list = {
				1 = {
					trigger = { has_character_flag = name_mite }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_mite
					}
				}
				1 = {
					trigger = { has_character_flag = name_paws }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_paws
					}
				}
				1 = {
					trigger = { has_character_flag = name_mittens }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_mittens
					}
				}
				1 = {
					trigger = { has_character_flag = name_gray }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_gray
					}
				}
				1 = {
					trigger = { has_character_flag = name_flame }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_flame
					}
				}
				1 = {
					trigger = { has_character_flag = name_snow }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_snow
					}
				}
				1 = {
					trigger = { has_character_flag = name_shadow }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_shadow
					}
				}
				1 = {
					trigger = { has_character_flag = name_gyb }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_gyb
					}
				}
				1 = {
					trigger = { has_character_flag = name_meone }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_meone
					}
				}
				1 = {
					trigger = { has_character_flag = name_cruibne }
					set_variable = {
						name = story_cycle_cat_name
						value = flag:cat_name_cruibne
					}
				}
			}
		}
	}

	widget = {
		gui = "event_window_widget_enter_text"
		container = "dynamic_birth_name"
		controller = {
			type = text
			data = {
				key = story_cycle_cat_name
				default = {
					localization_key = cat_name_mite
					trigger = {
						has_character_flag = name_mite
					}
				}
				default = {
					localization_key = cat_name_paws
					trigger = {
						has_character_flag = name_paws
					}
				}
				default = {
					localization_key = cat_name_mittens
					trigger = {
						has_character_flag = name_mittens
					}
				}
				default = {
					localization_key = cat_name_gray
					trigger = {
						has_character_flag = name_gray
					}
				}
				default = {
					localization_key = cat_name_flame
					trigger = {
						has_character_flag = name_flame
					}
				}
				default = {
					localization_key = cat_name_snow
					trigger = {
						has_character_flag = name_snow
					}
				}
				default = {
					localization_key = cat_name_shadow
					trigger = {
						has_character_flag = name_shadow
					}
				}
				default = {
					localization_key = cat_name_gyb
					trigger = {
						has_character_flag = name_gyb
					}
				}
				default = {
					localization_key = cat_name_meone
					trigger = {
						has_character_flag = name_meone
					}
				}
				default = {
					localization_key = cat_name_cruibne
					trigger = {
						has_character_flag = name_cruibne
					}
				}
			}
		}
		setup_scope = {
			root = { save_scope_as = text_target }
		}
	}

	option = { 
		name = pet_dragon.0001.a
	}

	after = {
		remove_character_flag = is_naming_cat
		remove_character_flag = name_gyb
		remove_character_flag = name_mite
		remove_character_flag = name_paws
		remove_character_flag = name_mittens
		remove_character_flag = name_gray
		remove_character_flag = name_flame
		remove_character_flag = name_snow
		remove_character_flag = name_shadow
		remove_character_flag = name_meone
		remove_character_flag = name_cruibne
		
		if = {
			# We entered custom text into the pop up
			limit = { NOT = { has_variable = story_cycle_cat_name } }
			set_variable = {
				name = story_cycle_cat_name
				value = flag:custom
			}
		}
	}
}

###########################################
# Other events for your cat
#	0100-0199
###########################################

#Random encounter, get some gold
#by Linnéa Thimrén
pet_dragon.0101 = {
	type = character_event
	title = pet_dragon.0101.t
	desc = {
		desc = pet_dragon.0101.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:story = {
						var:cat_age_variable > 10
					}
				}
				desc = pet_dragon.0101.desc_old
			}
			triggered_desc = {
				trigger = {
					scope:story = {
						var:cat_age_variable < 10
					}
				}
				desc = pet_dragon.0101.desc_young
			}
			desc = pet_dragon.0101.desc_middle
		}
		desc = pet_dragon.0101.desc_ending
	}
	theme = pet
	override_background = {
		event_background = corridor_day
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0101_event }
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_0101_event
			years = 10
		}
	}

	option = { #thank you!
		name = {
			trigger = { scope:story = { var:cat_gender = flag:female } }
			text = pet_dragon.0101.a_female
		}
		name = {
			trigger = { scope:story = { var:cat_gender = flag:male } }
			text = pet_dragon.0101.a_male
		}
		add_gold = 2
	}
}


#Your cat charms a vassal
#by Linnéa Thimrén
pet_dragon.0103 = {
	type = character_event
	title = pet_dragon.0103.t
	desc = pet_dragon.0103.desc
	theme = pet
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = scope:vassal
		animation = happiness
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0103_event }
		any_vassal = {
			is_available_ai = yes
		}
	}

	immediate = {
		random_vassal = {
			limit = {
				is_available_ai = yes
			}
			weight = {
				base = 50
				ai_value_modifier = {
					ai_compassion = 1
				}
			}
			save_scope_as = vassal
		}
		add_character_flag = {
			flag = had_pet_dragon_animal_0103_event
			years = 10
		}
	}

	option = {
		name = pet_dragon.0103.a
		scope:vassal = {
			add_opinion = {
				modifier = respect_opinion
				target = root
				opinion = 20
			}
		}
	}
}


#Chill with your cat and lose stress
#by Linnéa Thimrén
pet_dragon.0104 = {
	type = character_event
	title = pet_dragon.0104.t
	desc = pet_dragon.0104.desc
	theme = pet
	left_portrait = {
		character = root
		animation = personality_content
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0104_event }
		stress > normal_baseline_stress
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_0104_event
			years = 10
		}
		play_music_cue = "mx_cue_ck3_vocal_maintheme"
	}

	option = {
		name = pet_dragon.0104.a
		add_stress = medium_stress_loss
	}
}


#Your cat exposes a courtier's/vassal's secret
#by Linnéa Thimrén
pet_dragon.0105 = {
	type = character_event
	title = pet_dragon.0105.t
	desc = {
		desc = pet_dragon.0105.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_murder
					}
				}
				desc = pet_dragon.0105.desc_murder
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_lover
					}
				}
				desc = pet_dragon.0105.desc_lover
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_homosexual
					}
				}
				desc = pet_dragon.0105.desc_homosexual
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_deviant
					}
				}
				desc = pet_dragon.0105.desc_deviant
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_cannibal
					}
				}
				desc = pet_dragon.0105.desc_cannibal
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_murder_attempt
					}
				}
				desc = pet_dragon.0105.desc_murder_attempt
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_non_believer
					}
				}
				desc = pet_dragon.0105.desc_non_believer
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_incest
					}
				}
				desc = pet_dragon.0105.desc_incest
			}
			triggered_desc = {
				trigger = {
					scope:secret = {
						secret_type = secret_witch
					}
				}
				desc = pet_dragon.0105.desc_witch
			}
			desc = pet_dragon.0105.desc_fallback
		}
	}
	theme = pet
	left_portrait = scope:person

	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0105_event }
		OR = {
			any_courtier = {
				any_secret = {
					NOT = { is_known_by = root }
				}
			}
			any_vassal = {
				any_secret = {
					NOT = { is_known_by = root }
				}
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_0105_event
			years = 10
		}
		hidden_effect = { #As likely to get a vassal or a courtier
			random_list = {
				50 = {
					trigger = {
						any_courtier = {
								any_secret = {
									NOT = { is_known_by = root }
								}
							}
					}
					random_courtier = {
							limit = {
								any_secret = {
									NOT = { is_known_by = root }
								}
							}
							save_scope_as = person
							random_secret = {
								limit = {
									NOT = { is_known_by = root }
								}
								save_scope_as = secret
							}
						}
				}
				50 = {
					trigger = {
						any_vassal = {
								any_secret = {
									NOT = { is_known_by = root }
								}
							}
					}
					random_vassal = {
							limit = {
								any_secret = {
									NOT = { is_known_by = root }
								}
							}
							save_scope_as = person
							random_secret = {
								limit = {
									NOT = { is_known_by = root }
								}
								save_scope_as = secret
							}
						}
				}
			}
		}
		scope:secret = {
			reveal_to_without_events_effect = {
				CHARACTER = root
			}
		}
	}

	option = { #Keep it secret, keep it safe
		name = pet_dragon.0105.a
	}

	option = { #Expose!
		name = pet_dragon.0105.b
		scope:secret = {
			expose_secret = root
		}
	}
}

#Your spouse is allergic!
#by Linnéa Thimrén
pet_dragon.0106 = {
	type = character_event
	title = pet_dragon.0106.t
	desc = pet_dragon.0106.desc
	theme = pet
	left_portrait = {
		character = scope:spouse
		animation = sick
	}
	lower_left_portrait = scope:receiver_1
	lower_center_portrait = scope:receiver_2
	lower_right_portrait = scope:receiver_3

	# Trigger removed as it is handled by pet_dragon.6055
	immediate = {
		save_scope_as = giver
		add_character_flag = {
			flag = had_pet_dragon_animal_0106_event
			years = 10
		}
		random_spouse = {
			limit = {
				is_available_ai = yes
				NOR = {
					has_character_modifier = cat_story_allergy_modifier
					has_character_flag = forbidden_from_pet_allergies
				}
			}
			save_scope_as = spouse
		}

		#Who can you give it away to?
		if = {
			limit = {
				any_relation = {
					type = friend
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { this = scope:spouse }
				}
			}
			every_relation = {
				type = friend
				limit = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { this = scope:spouse }
				}
				add_to_list = can_get_cat
			}
		}
		if = {
			limit = {
				any_relation = {
					type = lover
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_cat }
					NOT = { this = scope:spouse }
				}
			}
			every_relation = {
				type = lover
				limit = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_cat }
					NOT = { this = scope:spouse }
				}
				add_to_list = can_get_cat
			}
		}
		if = {
			limit = {
				any_vassal = {
					NOT = { has_relation_rival = root }
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_cat }
					NOT = { this = scope:spouse }
				}
			}
			every_vassal = {
				limit = {
					NOT = { has_relation_rival = root }
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_cat }
					NOT = { this = scope:spouse }
				}
				add_to_list = can_get_cat
			}
		}
		if = { #Ehehehe, give it to another consort!
			limit = {
				any_consort = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_cat }
					NOT = { this = scope:spouse }
				}
			}
			every_consort = {
				limit = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_cat }
					NOT = { this = scope:spouse }
				}
				add_to_list = can_get_cat
			}
		}
		random_in_list = {
			list = can_get_cat
			save_scope_as = receiver_1
		}
		random_in_list = {
			list = can_get_cat
			limit = { NOT = { this = scope:receiver_1 } }
			save_scope_as = receiver_2
		}
		random_in_list = {
			list = can_get_cat
			limit = {
				NOR = {	
					this = scope:receiver_1
					this = scope:receiver_2
				}

			}
			save_scope_as = receiver_3
		}
	}

	option = { #Ok, I'll give it away to receiver_1
		name = pet_dragon.0106.a
		trigger = {
			exists = scope:receiver_1
		}
		transfer_cat_story_cycle_to_effect = { CHARACTER = scope:receiver_1 STORY = scope:story }
		scope:receiver_1 = {
			trigger_event = pet_dragon.0107
		}
	}

	option = { #Ok, I'll give it away to receiver_2
		name = pet_dragon.0106.b
		trigger = {
			exists = scope:receiver_2
		}
		transfer_cat_story_cycle_to_effect = { CHARACTER = scope:receiver_2 STORY = scope:story }
		scope:receiver_2 = {
			trigger_event = pet_dragon.0107
		}
	}

	option = { #Ok, I'll give it away to receiver_3
		name = pet_dragon.0106.c
		trigger = {
			exists = scope:receiver_3
		}
		transfer_cat_story_cycle_to_effect = { CHARACTER = scope:receiver_3 STORY = scope:story }
		scope:receiver_3 = {
			trigger_event = pet_dragon.0107
		}
	}

	option = { #No!
		name = pet_dragon.0106.d
		scope:spouse = {
			add_opinion = {
				target = root
				modifier = refusal_opinion
				opinion = -15
			}
			add_character_modifier = {
				modifier = cat_story_allergy_modifier
				years = 5
			}
		}
	}

	option = { #I'll... I'll get rid of it...
		name = pet_dragon.0106.e
		trigger = {
			NOT = { exists = scope:receiver_1 }
		}
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
		}
		scope:story = {
			hidden_effect = { end_story = yes }
		}
	}
}


#You got a cat!
#by Linnéa Thimrén
pet_dragon.0107 = {
	type = character_event
	title = pet_dragon.0107.t
	desc = pet_dragon.0107.desc
	theme = pet
	left_portrait = {
		character = scope:giver
		animation = sadness
	}

	immediate = {
		save_scope_as = receiver
	}

	option = { #Nice!
		name = pet_dragon.0107.a
		show_as_tooltip = { start_cat_story_cycle_effect = yes }
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.25
			}
		}
	}

	option = { #I don't want it...
		name = pet_dragon.0107.b
		add_gold = 10
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
		}
		scope:story = {
			hidden_effect = { end_story = yes }
		}
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_vengefulness = 0.15
			}
			opinion_modifier = {
				opinion_target = scope:giver
				multiplier = -1
			}
		}
	}

	after = {
		scope:giver = { #Check-up event for owner
			trigger_event = {
				id = pet_dragon.0108
				days = { 365 380 }
			}
		}
	}
}

#How's the cat doing with its new owner?
#by Linnéa Thimrén
pet_dragon.0108 = {
	type = character_event
	title = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:alive }
				desc = pet_dragon.0108.t
			}
			desc = pet_dragon.0108.t_dead
		}
	}
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = { exists = scope:alive }
				desc = {
					desc = pet_dragon.0108.desc_opening
					first_valid = {
						triggered_desc = {
							trigger = {
								scope:receiver = { is_landed = yes }
							}
							desc = pet_dragon.0108.desc_alive_landed
						}
						desc = pet_dragon.0108.desc_alive
					}
					random_valid = {
						desc = pet_dragon.0108.desc_alive_1
						desc = pet_dragon.0108.desc_alive_2
					}
				}
			}
			desc = {
				desc = pet_dragon.0108.desc_dead_opening
				first_valid = {
					triggered_desc = {
						trigger = {
							scope:receiver = { is_landed = yes }
						}
						desc = pet_dragon.0108.desc_dead_landed
					}
					desc = pet_dragon.0108.desc_dead
				}
				desc = pet_dragon.0108.desc_dead_ending
			}
		}
	}
	theme = pet
	left_portrait = {
		character = scope:receiver
		triggered_animation = {
			trigger = { NOT = { exists = scope:alive } }
			animation = paranoia
		}
		triggered_animation = {
			trigger = { exists = scope:alive }
			animation = happiness
		}
	}

	immediate = {
		if = {
			limit = {
				scope:receiver= {
					any_owned_story = {
						story_type = story_cycle_pet_cat
					}
				}
			}
			save_scope_value_as = {
				name = alive
				value = yes
			}
		}
	}

	option = { #It's alive and happy!
		name = pet_dragon.0108.a
		trigger = { exists = scope:alive }
		add_stress = minor_stress_loss
	}

	option = { #Where is the cat?!
		name = pet_dragon.0108.b
		trigger = { NOT = { exists = scope:alive } }
		add_stress = minor_stress_gain
	}
}


#Your cat kills rodents
#by Linnéa Thimrén
pet_dragon.0109 = {
	type = character_event
	title = pet_dragon.0109.t
	desc = pet_dragon.0109.desc
	theme = pet
	left_portrait = {
		character = root
		animation = happiness
	}

	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0109_event }
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_0109_event
			years = 10
		}
	}

	option = { #
		name = pet_dragon.0109.a
		add_character_modifier = {
			modifier = cat_killing_rodents_modifier
			years = 5
		}
	}
}

#Your cat insults a vassal
#by Linnéa Thimrén
pet_dragon.0110 = {
	type = character_event
	title = pet_dragon.0110.t
	desc = pet_dragon.0110.desc
	theme = pet
	left_portrait = {
		character = scope:vassal
		animation = anger
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0110_event }
		any_vassal = {
			is_available_ai = yes
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_0110_event
			years = 10
		}
		random_vassal = {
			limit = {
				is_available_ai = yes
			}
			weight = {
				base = 50
				modifier = {
					add = 40
					is_powerful_vassal_of = root
				}
			}
			save_scope_as = vassal
		}
	}

	option = { #I'll pay for it!
		name = pet_dragon.0110.a
		trigger = {
			short_term_gold >= medium_gold_value
		}
		show_as_unavailable = {
			short_term_gold < medium_gold_value
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Bah!
		name = pet_dragon.0110.b
		scope:vassal = {
			add_opinion = {
				modifier = insult_opinion
				target = root
				opinion = -20
			}
		}
	}
}

#Your cat has disappeared, probably due to your negligence
#by Linnéa Thimrén
pet_dragon.0197 = {
	type = character_event
	title = pet_dragon.0197.t
	desc = {
		first_valid = {
			triggered_desc = {
			    trigger = {
					has_character_flag = had_event_court_5020
			    }
			    desc = pet_dragon.0197.desc_court_5020
			}
			desc = pet_dragon.0197.desc
		}
	}
	theme = pet
	left_portrait = {
		character = root
		animation = sadness
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
	}

	option = {
		name = pet_dragon.0197.a
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
		}
		scope:story = {
			hidden_effect = { end_story = yes }
		}
	}

	#TODO_CD_L: add option to try and find the cat
	
	after = {
		remove_character_flag = cat_is_dying
	}
}

#Cat dies
#by Linnéa Thimrén
pet_dragon.0199 = {
	type = character_event
	title = pet_dragon.0199.t
	desc = pet_dragon.0199.desc
	theme = pet
	left_portrait = {
		character = root
		animation = sadness
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
	}

	option = {
		name = pet_dragon.0199.a
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
		}
		scope:story = {
			hidden_effect = { end_story = yes }
		}
		ai_chance = {
			base = 100
		}
	}
	
	option = {
		name = pet_dragon.0199.b
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
		}
		remove_short_term_gold = medium_gold_value
		set_variable = {
			name = animal_hide_type
			value = flag:cat
			days = 1
		}
		create_artifact_animal_hide_small_effect = {
			OWNER = root
			HUNTER = root
		}
		custom_tooltip = pet_dragon.0199.b.tt
		scope:story = {
			hidden_effect = { end_story = yes }
		}
		ai_chance = {
			base = 0
		}
	}

	after = {
		remove_character_flag = cat_is_dying
	}
}




##############
##############
## DOG
##############
##############

###########################################
# Name your dragon
#	1001-0999
###########################################

#Name your dragon
#by Linnéa Thimrén
pet_dragon.1001 = {
	type = character_event
	title = pet_dragon.1001.t
	desc = pet_dragon.1001.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = {
		character = root
		animation = personality_cynical
	}

	immediate = {
		assign_name_options_dragon_story_cycle_effect = yes
		assign_name_options_dragon_story_cycle_effect = yes
		assign_name_options_dragon_story_cycle_effect = yes
		play_music_cue = "mx_cue_low_key_positive"

		if = {
			limit = { is_ai = yes }
			random_list = {
				1 = {
					trigger = { has_character_flag = name_amiable }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_amiable
					}
				}
				1 = {
					trigger = { has_character_flag = name_nosewise }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_nosewise
					}
				}
				1 = {
					trigger = { has_character_flag = name_holdfast }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_holdfast
					}
				}
				1 = {
					trigger = { has_character_flag = name_gray }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_gray
					}
				}
				1 = {
					trigger = { has_character_flag = name_choplicker }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_choplicker
					}
				}
				1 = {
					trigger = { has_character_flag = name_shadow }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_shadow
					}
				}
				1 = {
					trigger = { has_character_flag = name_snow }
					set_variable = {
						name = story_cycle_dragon_name
						value = flag:dragon_name_snow
					}
				}
			}
		}
	}

	widget = {
		gui = "event_window_widget_enter_text"
		container = "dynamic_birth_name"
		controller = {
			type = text
			data = {
				key = story_cycle_dragon_name
				default = {
					localization_key = dragon_name_amiable
					trigger = {
						has_character_flag = name_amiable
					}
				}
				default = {
					localization_key = dragon_name_nosewise
					trigger = {
						has_character_flag = name_nosewise
					}
				}
				default = {
					localization_key = dragon_name_holdfast
					trigger = {
						has_character_flag = name_holdfast
					}
				}
				default = {
					localization_key = dragon_name_gray
					trigger = {
						has_character_flag = name_gray
					}
				}
				default = {
					localization_key = dragon_name_shadow
					trigger = {
						has_character_flag = name_shadow
					}
				}
				default = {
					localization_key = dragon_name_snow
					trigger = {
						has_character_flag = name_snow
					}
				}
			}
		}
		setup_scope = {
			root = { save_scope_as = text_target }
		}
	}

	option = {
		name = pet_dragon.0001.a
	}

	after = {
		remove_character_flag = is_naming_dragon
		remove_character_flag = name_amiable
		remove_character_flag = name_nosewise
		remove_character_flag = name_holdfast
		remove_character_flag = name_gray
		remove_character_flag = name_choplicker
		remove_character_flag = name_shadow
		remove_character_flag = name_snow

		if = {
			# We entered custom text into the pop up
			limit = { NOT = { has_variable = story_cycle_dragon_name } }
			set_variable = {
				name = story_cycle_dragon_name
				value = flag:custom
			}
		}
	}
}



###########################################
# Other events for your dragon
#	1100-1199
###########################################

#Go out and walk your dragon, get health modifier
#by Linnéa Thimrén
pet_dragon.1101 = {
	type = character_event
	title = pet_dragon.1101.t
	desc = pet_dragon.1101.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	override_background = {
		trigger = {
			NAND = {
				culture = { has_cultural_pillar = heritage_north_germanic }
				religion = religion:germanic_religion
			}
		}
		event_background = farmland
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1101_event }
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_1101_event
			years = 10
		}
	}

	option = { #walk on!
		name = pet_dragon.1101.a
		add_character_modifier = {
			modifier = dragon_story_walking_modifier
			days = 3650
		}
	}
}

#Dragon runs away!
#by Linnéa Thimrén
pet_dragon.1102 = {
	type = character_event
	title = pet_dragon.1102.t
	desc = pet_dragon.1102.desc
	theme = pet
	override_background = {
		event_background = terrain
	}
	left_portrait = {
		character = root
		animation = worry
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1102_event }
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_1102_event
			years = 10
		}
	}

	option = { #Run after
		name = pet_dragon.1102.a
		flavor = pet_dragon.1102.a.tt
		save_scope_value_as = {
			name = followed
			value = yes
		}
	}

	option = { #You wait
		name = pet_dragon.1102.b
		flavor = pet_dragon.1102.b.tt
	}

	after = {
		hidden_effect = {
			random_list = {
				20 = {
					modifier = {
						add = 20
						exists = scope:followed
					}
					trigger_event = {
						id = pet_dragon.1103
						days = { 7 14 }
					}
				}
				10 = {
					trigger_event = {
						id = pet_dragon.1104
						days = { 7 14 }
					}
				}
				50 = { #Rival kills dragon :(
					trigger = {
						any_relation = {
							type = rival
							is_alive = yes
							is_imprisoned = no
						}
					}
					trigger_event = {
						id = pet_dragon.1105
						days = { 7 14 }
					}
				}
				50 = { #Friend returns dragon!
					trigger = {
						any_relation = {
							type = friend
							is_alive = yes
							is_imprisoned = no
						}
					}
					trigger_event = {
						id = pet_dragon.1106
						days = { 7 14 }
					}
				}
			}
		}
	}
}

#Found dragon!
#by Linnéa Thimrén
pet_dragon.1103 = {
	type = character_event
	title = pet_dragon.1102.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:followed
				}
				desc = pet_dragon.1103.desc_followed
			}
			desc = pet_dragon.1103.desc
		}
		desc = pet_dragon.1103.desc_ending
	}
	theme = pet
	override_background = {
		event_background = terrain
	}
	left_portrait = root

	trigger = {
		exists = scope:story
	}

	option = {
		name = pet_dragon.1103.a
		add_gold = 2
	}
}

#Dragon is gone :(
#by Linnéa Thimrén
pet_dragon.1104 = {
	type = character_event
	title = pet_dragon.1102.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:followed
				}
				desc = pet_dragon.1104.desc_followed
			}
			desc = pet_dragon.1104.desc
		}
		desc = pet_dragon.1104.desc_ending
	}
	theme = pet
	override_background = {
		event_background = terrain
	}
	left_portrait = {
		character = root
		animation = sadness
	}

	trigger = {
		exists = scope:story
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
	}

	option = { #
		name = pet_dragon.1104.a
		scope:story = {
			hidden_effect = { end_story = yes }
		}
	}
}

#Rival killed dragon :(
#by Linnéa Thimrén
pet_dragon.1105 = {
	type = character_event
	title = pet_dragon.1102.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:followed
				}
				desc = pet_dragon.1104.desc_followed
			}
			desc = pet_dragon.1104.desc
		}
		desc = pet_dragon.1105.desc_ending
	}
	theme = pet
	override_background = {
		event_background = terrain
	}
	left_portrait = {
		character = scope:rival
		animation = schadenfreude
	}

	trigger = {
		any_relation = {
			type = rival
			is_alive = yes
			is_imprisoned = no
		}
		exists = scope:story
	}

	immediate = {
		random_relation = {
			type = rival
			limit = {
				has_relation_nemesis = root
				is_imprisoned = no
			}
			alternative_limit = {
				is_alive = yes
				is_imprisoned = no
			}
			save_scope_as = rival
		}
		random_dummy_gender_soldier_effect = { SCOPE_NAME = dummy_gender }
	}

	option = { #what did you do to them?!
		name = pet_dragon.1105.a
		scope:story = {
			hidden_effect = { end_story = yes }
		}
		hidden_effect = {
			scope:rival = {
				add_character_modifier = {
					modifier = dragon_story_fur_carpet_modifier
					years = 10
				}
			}
		}
	}
}

#Friend return dragon!
#by Linnéa Thimrén
pet_dragon.1106 = {
	type = character_event
	title = pet_dragon.1102.t
	desc = {
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:followed
				}
				desc = pet_dragon.1104.desc_followed
			}
			desc = pet_dragon.1104.desc
		}
		desc = pet_dragon.1106.desc_ending
	}
	theme = pet
	override_background = {
		event_background = terrain
	}
	left_portrait = {
		character = scope:friend
		animation = happiness
	}

	trigger = {
		any_relation = {
			type = friend
			is_alive = yes
			is_imprisoned = no
			age >= 12
		}
		exists = scope:story
	}

	immediate = {
		random_relation = {
			type = friend
			limit = {
				has_relation_best_friend = root
				age >= 12
			}
			alternative_limit = {
				is_alive = yes
				is_imprisoned = no
				age >= 12
			}
			save_scope_as = friend
		}
	}

	option = { #Thank you!
		name = pet_dragon.1106.a
		scope:friend = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 15
			}
		}
	}
}


#Your dragon charms a vassal
#by Linnéa Thimrén
pet_dragon.1107 = {
	type = character_event
	title = pet_dragon.1107.t
	desc = pet_dragon.1107.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	override_background = {
		trigger = {
			NAND = {
				culture = { has_cultural_pillar = heritage_north_germanic }
				religion = religion:germanic_religion
			}
		}
		event_background = courtyard
	}
	left_portrait = {
		character = scope:vassal
		animation = happiness
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1107_event }
		any_vassal = {
			is_available_ai = yes
		}
	}

	immediate = {
		random_vassal = {
			limit = {
				is_available_ai = yes
			}
			weight = {
				base = 50
				ai_value_modifier = {
					ai_compassion = 1
				}
			}
			save_scope_as = vassal
		}
		add_character_flag = {
			flag = had_pet_dragon_animal_1107_event
			years = 10
		}
	}

	option = {
		name = {
			trigger = { scope:story = { var:dragon_gender = flag:female } }
			text = pet_dragon.1107.a_female
		}
		name = {
			trigger = { scope:story = { var:dragon_gender = flag:male } }
			text = pet_dragon.1107.a_male
		}
		scope:vassal = {
			add_opinion = {
				modifier = respect_opinion
				target = root
				opinion = 20
			}
		}
	}
}


#Your dragon exposes a scheme targeting you
#by Linnéa Thimrén
pet_dragon.1108 = {
	type = character_event
	title = pet_dragon.1108.t
	desc = pet_dragon.1108.desc
	theme = pet
	override_background = {
		event_background = sitting_room
	}
	left_portrait = scope:agent
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1108_event }
		any_targeting_scheme = {
			is_scheme_exposed = no
			save_temporary_scope_as = scheme_check
			any_scheme_agent = {
				NOT = { is_agent_exposed_in_scheme = scope:scheme_check }
				is_in_the_same_court_as = root
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_1108_event
			years = 10
		}
		random_targeting_scheme = {
			limit = {
				is_scheme_exposed = no
			}
			save_scope_as = scheme
			random_scheme_agent = {
				limit = {
					NOT = { is_agent_exposed_in_scheme = scope:scheme }
					is_in_the_same_court_as = root
				}
				save_scope_as = agent
			}
		}
	}

	option = {
		name = pet_dragon.1108.a
		scope:scheme = {
			expose_scheme = yes
		}
	}
}


#Meet another dragon!
#by Linnéa Thimrén
pet_dragon.1109 = {
	type = character_event
	title = pet_dragon.1109.t
	desc = pet_dragon.1109.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = scope:other_owner
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1109_event }
		OR = {
			any_vassal = {
				is_available_ai = yes
				any_owned_story = {
					story_type = story_cycle_pet_dragon
					exists = story_owner.var:story_cycle_dragon_name
				}
			}
			any_courtier = {
				is_available_ai = yes
				any_owned_story = {
					story_type = story_cycle_pet_dragon
					exists = story_owner.var:story_cycle_dragon_name
				}
			}
			any_neighboring_top_liege_realm_owner = {
				is_available_ai = yes
				any_owned_story = {
					story_type = story_cycle_pet_dragon
					exists = story_owner.var:story_cycle_dragon_name
				}
			}
			AND = {
				exists = liege
				liege = {
					is_available_ai = yes
					any_owned_story = {
						story_type = story_cycle_pet_dragon
						exists = story_owner.var:story_cycle_dragon_name
					}
				}
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_1109_event
			years = 10
		}
		hidden_effect = {
			random_list = {
				10 = {
					trigger = {
						any_vassal = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
					}
					random_vassal = {
						limit = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
						save_scope_as = other_owner
						random_owned_story = {
							limit = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
							save_scope_as = other_story
						}
					}
				}
				10 = {
					trigger = {
						any_courtier = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
					}
					random_courtier = {
						limit = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
						save_scope_as = other_owner
						random_owned_story = {
							limit = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
							save_scope_as = other_story
						}
					}
				}
				10 = {
					trigger = {
						any_neighboring_top_liege_realm_owner = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
					}
					random_neighboring_top_liege_realm_owner = {
						limit = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
						save_scope_as = other_owner
						random_owned_story = {
							limit = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
							save_scope_as = other_story
						}
					}
				}
				10 = {
					trigger = {
						liege = {
							is_available_ai = yes
							any_owned_story = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
						}
					}
					liege = {
						save_scope_as = other_owner
						random_owned_story = {
							limit = {
								story_type = story_cycle_pet_dragon
								exists = story_owner.var:story_cycle_dragon_name
							}
							save_scope_as = other_story
						}
					}
				}
			}
		}
	}

	option = { #I'm sure they'll be fine
		name = pet_dragon.1109.a
		flavor = pet_dragon.1109.a.tt
		hidden_effect = {
			random_list = {
				10 = { #Breed
					trigger = {
						OR = {
							AND = {
								scope:story = { var:dragon_gender = flag:female }
								scope:other_story = { var:dragon_gender = flag:male }
							}
							AND = {
								scope:story = { var:dragon_gender = flag:male }
								scope:other_story = { var:dragon_gender = flag:female }
							}
						}
					}
					trigger_event = {
						id = pet_dragon.1110
						days = { 7 14 }
					}
				}
				20 = { #Play
					trigger_event = {
						id = pet_dragon.1111
						days = { 7 14 }
					}
				}
				10 = { #Fight
					trigger_event = {
						id = pet_dragon.1112
						days = { 7 14 }
					}
				}
			}
		}
	}
}


#The dragons bred!
#by Linnéa Thimrén
pet_dragon.1110 = {
	type = character_event
	title = pet_dragon.1109.t
	desc = {
		desc = pet_dragon.1110.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:your_dragon
				}
				desc = pet_dragon.1110.desc_your_dragon
			}
			desc = pet_dragon.1110.desc_their_dragon
		}
	}
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = scope:other_owner

	trigger = {
		exists = scope:story
		scope:other_owner = { is_alive = yes }
	}

	immediate = {
		if = { #We only care if it was your dragon
			limit = {
				scope:story = { var:dragon_gender = flag:female }
			}
			dragon_got_pregnant_effect = yes
			save_scope_value_as = {
				name = your_dragon
				value = yes
			}
		}
	}

	option = { #Ups
		name = pet_dragon.1110.a
		if = {
			limit = {
				NOT = { exists = scope:your_dragon }
			}
			scope:other_owner = {
				add_opinion = {
					target = root
					modifier = hate_opinion
					opinion = -10
				}
			}
		}
	}
}

#The dragons play
#by Linnéa Thimrén
pet_dragon.1111 = {
	type = character_event
	title = pet_dragon.1109.t
	desc = pet_dragon.1111.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = {
		character = scope:other_owner
		animation = happiness
	}

	trigger = {
		exists = scope:story
		scope:other_owner = { is_alive = yes }
	}

	option = { #Cute!
		name = pet_dragon.1111.a
		scope:other_owner = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 15
			}
		}
	}
}

#The dragons fight
#by Linnéa Thimrén
pet_dragon.1112 = {
	type = character_event
	title = pet_dragon.1109.t
	desc = {
		desc = pet_dragon.1112.desc
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:dead
				}
				desc = pet_dragon.1112.desc_dead
			}
			desc = pet_dragon.1112.desc_alive
		}
	}
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = {
		character = scope:other_owner
		animation = anger
	}

	trigger = {
		exists = scope:story
		scope:other_owner = { is_alive = yes }
	}

	immediate = {
		hidden_effect = {
			random = {
				chance = 25
				save_scope_value_as = {
					name = dead
					value = yes
				}
			}
		}
		if = {
			limit = {
				exists = scope:dead
			}
			scope:other_owner = {
				add_opinion = {
					target = root
					modifier = hate_opinion
					opinion = -20
				}
				show_as_tooltip = {
					remove_dragon_story_modifiers_effect = yes
				}
				if = {
					limit = {
						exists = scope:other_story
					}
					scope:other_story = {
						hidden_effect = { end_story = yes }
					}
				}
			}
		}
		else = {
			scope:other_owner = {
				add_opinion = {
					target = root
					modifier = hate_opinion
					opinion = -10
				}
			}
		}
	}

	option = { #Ups
		name = pet_dragon.1112.a
	}
}


#Bring your dragon to a council meeting?
#by Linnéa Thimrén
pet_dragon.1113 = {
	type = character_event
	title = pet_dragon.1113.t
	desc = pet_dragon.1113.desc
	theme = pet
	override_background = {
		event_background = council_chamber
	}
	left_portrait = root
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1113_event }
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_1113_event
			years = 10
		}
		
	}

	option = { #Bring them
		name = pet_dragon.1113.a

		every_councillor = {
			custom = every_councillor
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -5
			}
		}
		
		random_list = {
			75 = { #They make you seem cool!
				desc = pet_dragon.1113.a_success
				show_chance = no
				custom_tooltip = pet_dragon.1113.a_success.tt
				trigger_event = {
					id = pet_dragon.1114
					days = { 7 10 }
				}
			}
			25 = { #They poop
				desc = pet_dragon.1113.a_failure
				show_chance = no
				custom_tooltip = pet_dragon.1113.a_failure.tt
				trigger_event = {
					id = pet_dragon.1115
					days = { 7 10 }
				}
			}
		}
	}

	option = { #Don't bring them
		name = pet_dragon.1113.b
		custom_tooltip = pet_dragon.1113.b.tt

		random_list = {
			50 = { #They befriends a courtier
				desc = pet_dragon.1113.b_success
				show_chance = no
				custom_tooltip = pet_dragon.1113.a_success.tt
				trigger = {
					any_courtier = { NOT = { has_relation_rival = root } }
				}
				trigger_event = {
					id = pet_dragon.1116
					days = { 7 10 }
				}
			}
			50 = { #They trash a courtier's room
				desc = pet_dragon.1113.b_failure
				show_chance = no
				custom_tooltip = pet_dragon.1113.a_failure.tt
				trigger_event = {
					id = pet_dragon.1117
					days = { 7 10 }
				}
			}
		}
	}
}

#You bring them and it works out
#by Linnéa Thimrén
pet_dragon.1114 = {
	type = character_event
	title = pet_dragon.1113.t
	desc = pet_dragon.1114.desc
	theme = pet
	override_background = {
		event_background = council_chamber
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	right_portrait = {
		character = scope:councillor
		animation = fear
	}

	immediate = {
		random_councillor = {
			weight = {
				base = 1
				opinion_modifier = {
					opinion_target = root
					multiplier = -5
				}
			}
			save_scope_as = councillor
		}
	}

	option = { #
		name = {
			trigger = { scope:story = { var:dragon_gender = flag:female } }
			text = pet_dragon.1014.a_girl
		}
		name = {
			trigger = { scope:story = { var:dragon_gender = flag:male } }
			text = pet_dragon.1014.a_boy
		}
		add_prestige = minor_prestige_gain
	}
}


#You bring them and they poop
#by Linnéa Thimrén
pet_dragon.1115 = {
	type = character_event
	title = pet_dragon.1113.t
	desc = pet_dragon.1115.desc
	theme = pet
	override_background = {
		event_background = council_chamber
	}
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:councillor
		animation = fear
	}

	immediate = {
		random_councillor = {
			weight = {
				base = 1
				opinion_modifier = {
					opinion_target = root
					multiplier = -5
				}
			}
			save_scope_as = councillor
		}
	}

	option = { #
		name = pet_dragon.1115.a
		add_prestige = minor_prestige_loss
		
	}
}

#You don't bring them and they befriend a courtier
#by Linnéa Thimrén
pet_dragon.1116 = {
	type = character_event
	title = pet_dragon.1113.t
	desc = {
		desc = pet_dragon.1116.desc_opening
		desc = pet_dragon.1116.desc
	}
	theme = pet
	override_background = {
		event_background = corridor_day
	}
	left_portrait = {
		character = scope:courtier
		animation = happiness
	}

	trigger = {
		any_courtier = { NOT = { has_relation_rival = root } }
	}

	immediate = {
		random_courtier = {
			limit = {
				NOT = { has_relation_rival = root }
			}
			save_scope_as = courtier
		}
	}

	option = { #
		name = pet_dragon.1116.a
		scope:courtier = {
			add_opinion = {
				target = root
				modifier = friendliness_opinion
				opinion = 15
			}
		}
	}
}

#You don't bring them and they trash a courtier's room
#by Linnéa Thimrén
pet_dragon.1117 = {
	type = character_event
	title = pet_dragon.1113.t
	desc = {
		desc = pet_dragon.1116.desc_opening
		desc = pet_dragon.1117.desc
	}
	theme = pet
	override_background = {
		event_background = corridor_day
	}
	left_portrait = {
		character = scope:courtier
		animation = anger
	}
	
	trigger = {
		any_courtier = {
			is_alive = yes
		}
	}

	immediate = {
		random_courtier = {
			limit = {
				has_relation_rival = root
			}
			alternative_limit = {
				has_relation_potential_rival = root
			}
			alternative_limit = {
				is_alive = yes
			}
			save_scope_as = courtier
		}
	}

	option = { #
		name = pet_dragon.1117.a
		scope:courtier = {
			add_opinion = {
				target = root
				modifier = respect_opinion
				opinion = -15
			}
		}
	}
}


#Your dragon insults a vassal
#by Linnéa Thimrén
pet_dragon.1118 = {
	type = character_event
	title = pet_dragon.1118.t
	desc = pet_dragon.1118.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = {
		character = scope:vassal
		animation = anger
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_1118_event }
		any_vassal = {
			is_available_ai = yes
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_1118_event
			years = 10
		}
		random_vassal = {
			limit = {
				is_available_ai = yes
			}
			weight = {
				base = 50
				modifier = {
					add = 40
					is_powerful_vassal_of = root
				}
			}
			save_scope_as = vassal
		}
	}

	option = { #I'll pay for it!
		name = pet_dragon.1118.a
		trigger = {
			short_term_gold >= medium_gold_value
		}
		show_as_unavailable = {
			short_term_gold < medium_gold_value
		}
		remove_short_term_gold = medium_gold_value
	}

	option = { #Bah!
		name = pet_dragon.1118.b
		scope:vassal = {
			add_opinion = {
				modifier = insult_opinion
				target = root
				opinion = -20
			}
		}
	}
}

#Puppies!
#by Linnéa Thimrén
pet_dragon.1190 = {
	type = character_event
	title = pet_dragon.1190.t
	desc = pet_dragon.1190.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = root
	lower_left_portrait = scope:receiver_1
	lower_center_portrait = scope:receiver_2
	lower_right_portrait = scope:receiver_3

	immediate = {
		save_scope_as = giver
		#Who can get a puppy?
		if = {
			limit = {
				any_relation = {
					type = friend
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
				}
			}
			every_relation = {
				type = friend
				limit = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
				}
				add_to_list = can_get_dragon
			}
		}
		if = {
			limit = {
				any_relation = {
					type = lover
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_dragon }
				}
			}
			every_relation = {
				type = lover
				limit = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_dragon }
				}
				add_to_list = can_get_dragon
			}
		}
		if = {
			limit = {
				any_vassal = {
					NOT = { has_relation_rival = root }
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_dragon }
				}
			}
			every_vassal = {
				limit = {
					NOT = { has_relation_rival = root }
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_dragon }
				}
				add_to_list = can_get_dragon
			}
		}
		if = {
			limit = {
				any_consort = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_dragon }
				}
			}
			every_consort = {
				limit = {
					NOT = {
						any_owned_story = {
								story_type = story_cycle_pet_cat
							}
					}
					NOT = { is_in_list = can_get_dragon }
				}
				add_to_list = can_get_dragon
			}
		}
		random_in_list = {
			list = can_get_dragon
			save_scope_as = receiver_1
		}
		random_in_list = {
			list = can_get_dragon
			limit = { NOT = { this = scope:receiver_1 } }
			save_scope_as = receiver_2
		}
		random_in_list = {
			list = can_get_dragon
			limit = {
				NOR = {	
					this = scope:receiver_1
					this = scope:receiver_2
				}

			}
			save_scope_as = receiver_3
		}
	}

	option = { #Ok, I'll give it away to receiver_1
		name = pet_dragon.1190.a
		trigger = {
			exists = scope:receiver_1
		}
		scope:receiver_1 = {
			show_as_tooltip = { start_dragon_story_cycle_effect = yes }
			trigger_event = pet_dragon.1191
		}
	}

	option = { #Ok, I'll give it away to receiver_2
		name = pet_dragon.1190.b
		trigger = {
			exists = scope:receiver_2
		}
		scope:receiver_2 = {
			show_as_tooltip = { start_dragon_story_cycle_effect = yes }
			trigger_event = pet_dragon.1191
		}
	}

	option = { #Ok, I'll give it away to receiver_3
		name = pet_dragon.1190.c
		trigger = {
			exists = scope:receiver_3
		}
		scope:receiver_3 = {
			show_as_tooltip = { start_dragon_story_cycle_effect = yes }
			trigger_event = pet_dragon.1191
		}
	}

	option = { #No one to give it to :(
		name = pet_dragon.1190.d
		trigger = {
			NOT = { exists = scope:receiver_1 }
		}
		add_gold = 10
	}
}

#You got a puppy!
#by Linnéa Thimrén
pet_dragon.1191 = {
	type = character_event
	title = pet_dragon.1191.t
	desc = pet_dragon.1191.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = scope:giver

	immediate = {
		save_scope_as = receiver
	}

	option = { #Nice!
		name = pet_dragon.1191.a
		start_dragon_story_cycle_effect = yes
		ai_chance = {
			base = 50
			ai_value_modifier = {
				ai_compassion = 0.25
			}
		}
	}

	option = { #I don't want it...
		name = pet_dragon.1191.b
		add_gold = 10
		
		ai_chance = {
			base = 0
			ai_value_modifier = {
				ai_vengefulness = 0.15
			}
			opinion_modifier = {
				opinion_target = scope:giver
				multiplier = -1
			}
		}
	}

	after = {
		scope:giver = { #Checkup event for giver
			trigger_event = {
				id = pet_dragon.1192
				days = { 365 380 }
			}
		}
	}
}


#How's the dragon doing with its new owner?
#by Linnéa Thimrén
pet_dragon.1192 = {
	type = character_event
	title = pet_dragon.1192.t
	desc = {
		desc = pet_dragon.1192.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					exists = scope:alive
				}
				desc = {
					desc = {
						first_valid = {
							triggered_desc = {
								trigger = {
									scope:receiver = { is_landed = yes }
								}
								desc = pet_dragon.1192.desc_alive_landed
							}
							desc = pet_dragon.1192.desc_alive
						}
					}
					random_valid = {
						desc = pet_dragon.1192.desc_alive_1
						desc = pet_dragon.1192.desc_alive_2
					}
				}
			}
			desc = pet_dragon.1192.desc
		}
	}
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = {
		character = scope:receiver
		triggered_animation = {
			trigger = { NOT = { exists = scope:alive } }
			animation = paranoia
		}
		triggered_animation = {
			trigger = { exists = scope:alive }
			animation = happiness
		}
	}

	trigger = {
		scope:receiver = {
			is_alive = yes
		}
	}

	immediate = {
		if = {
			limit = {
				scope:receiver= {
					any_owned_story = {
							story_type = story_cycle_pet_dragon
						}
				}
			}
			save_scope_value_as = {
				name = alive
				value = yes
			}
		}
	}

	option = { #It's alive and happy!
		name = pet_dragon.1192.a
		trigger = { exists = scope:alive }
		add_stress = minor_stress_loss
	}

	option = { #Where is the dragon?!
		name = pet_dragon.1192.b
		trigger = { NOT = { exists = scope:alive } }
		add_stress = minor_stress_gain
	}
}


#Dragon dies
#by Linnéa Thimrén
pet_dragon.1199 = {
	type = character_event
	title = pet_dragon.1199.t
	desc = pet_dragon.1199.desc
	theme = pet
	override_background = {
		trigger = {
			culture = { has_cultural_pillar = heritage_north_germanic }
			religion = religion:germanic_religion
		}
		event_background = fp1_runestone
	}
	left_portrait = {
		character = root
		animation = sadness
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
	}

	option = {
		name = pet_dragon.1199.a
		show_as_tooltip = {
			remove_dragon_story_modifiers_effect = yes
		}
		scope:story = {
			hidden_effect = { end_story = yes }
		}
		ai_chance = {
			base = 100
		}
	}

	option = {
		name = pet_dragon.0199.b
		show_as_tooltip = {
			remove_dragon_story_modifiers_effect = yes
		}
		remove_short_term_gold = medium_gold_value
		set_variable = {
			name = animal_hide_type
			value = flag:dragon
			days = 1
		}
		create_artifact_animal_hide_small_effect = {
			OWNER = root
			HUNTER = root
		}
		custom_tooltip = pet_dragon.0199.b.tt
		scope:story = {
			hidden_effect = { end_story = yes }
		}
		ai_chance = {
			base = 0
		}
	}

	after = {
		remove_character_flag = dragon_is_dying
	}
}




##############
##############
## CAT AND DOG
##############
##############

#You have both a dragon AND a cat (you lucky person, you!)
#by Linnéa Thimrén
pet_dragon.2001 = {
	type = character_event
	title = pet_dragon.2001.t
	desc = pet_dragon.2001.desc
	theme = pet
	override_background = {
		event_background = sitting_room
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_2001_event }
		any_owned_story = {
			story_type = story_cycle_pet_cat
			exists = story_owner.var:story_cycle_cat_name
		}
		any_owned_story = {
			story_type = story_cycle_pet_dragon
			exists = story_owner.var:story_cycle_dragon_name
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_2001_event
			years = 10
		}
	}

	option = {
		name = pet_dragon.2001.a
		add_stress = medium_stress_loss
	}
}

#You have both a dragon AND a cat. Things don't really work out
#by Linnéa Thimrén
pet_dragon.2002 = {
	type = character_event
	title = pet_dragon.2002.t
	desc = pet_dragon.2002.desc
	theme = pet
	override_background = {
		event_background = courtyard
	}
	left_portrait = root
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_2002_event }
		NOT = { has_character_flag = had_pet_dragon_animal_2001_event } #They haven't already cozied it up
		any_owned_story = {
			story_type = story_cycle_pet_cat
			exists = story_owner.var:story_cycle_cat_name
		}
		any_owned_story = {
			story_type = story_cycle_pet_dragon
			exists = story_owner.var:story_cycle_dragon_name
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_2002_event
			years = 10
		}
		random_owned_story = {
				limit = {
					story_type = story_cycle_pet_cat
				}
				save_scope_as = cat_story
			}
			random_owned_story = {
				limit = {
					story_type = story_cycle_pet_dragon
				}
				save_scope_as = dragon_story
			}
	}

	option = {
		name = pet_dragon.2002.a
		custom_tooltip = pet_dragon.2002.a.tt
		save_scope_value_as = {
			name = sided_with_cat
			value = yes
		}
	}

	option = {
		name = pet_dragon.2002.b
		custom_tooltip = pet_dragon.2002.b.tt
		save_scope_value_as = {
			name = sided_with_dragon
			value = yes
		}
	}

	option = {
		name = pet_dragon.2002.c
		flavor = pet_dragon.2002.c.tt
	}

	after = {
		hidden_effect = {
			random_list = {
				10 = { #Dragon dies
					modifier = {
						add = 10
						exists = scope:sided_with_cat
					}
					add_character_flag = dragon_is_dying
					trigger_event = {
						id = pet_dragon.2003
						days = { 7 14 }
					}
				}
				15 = { #Cat dies
					modifier = {
						add = 10
						exists = scope:sided_with_dragon
					}
					add_character_flag = cat_is_dying
					trigger_event = {
						id = pet_dragon.2004
						days = { 7 14 }
					}
				}
				5 = { #Both die
					add_character_flag = dragon_is_dying
					add_character_flag = cat_is_dying
					trigger_event = {
						id = pet_dragon.2005
						days = { 7 14 }
					}
				}
				2 = { #They work it out
					modifier = { #You at least tried to do something
						add = 5
						OR = {
							exists = scope:sided_with_cat
							exists = scope:sided_with_dragon
						}
					}
					trigger_event = {
						id = pet_dragon.2006
						days = { 7 14 }
					}
				}
			}
		}
	}
}

#Dragon dies
#by Linnéa Thimrén
pet_dragon.2003 = {
	type = character_event
	title = pet_dragon.2002.t
	desc = pet_dragon.2003.desc
	theme = pet
	override_background = {
		event_background = courtyard
	}
	left_portrait = {
		character = root
		animation = grief
	}

	immediate = {
		play_music_cue = "mx_cue_stress"
	}

	option = {
		name = pet_dragon.2003.a
		show_as_tooltip = {
			remove_dragon_story_modifiers_effect = yes
		}
		scope:dragon_story = {
			hidden_effect = { end_story = yes }
		}
	}

	after = {
		remove_character_flag = dragon_is_dying
	}
}

#Cat dies
#by Linnéa Thimrén
pet_dragon.2004 = {
	type = character_event
	title = pet_dragon.2002.t
	desc = {
		desc = pet_dragon.2004.desc_opening
		first_valid = {
			triggered_desc = {
				trigger = {
					scope:dragon_story = { var:dragon_gender = flag:female }
				}
				desc = pet_dragon.2004.desc_female
			}
			desc = pet_dragon.2004.desc_male
		}
		desc = pet_dragon.2004.desc
	}
	theme = pet
	left_portrait = {
		character = root
		animation = grief
	}

	immediate = {
		play_music_cue = "mx_cue_murder"
	}

	option = {
		name = pet_dragon.2004.a
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
		}
		scope:cat_story = {
			hidden_effect = { end_story = yes }
		}
	}

	after = {
		remove_character_flag = cat_is_dying
	}
}

#Both die
#by Linnéa Thimrén
pet_dragon.2005 = {
	type = character_event
	title = pet_dragon.2002.t
	desc = {
		desc = pet_dragon.2005.desc_opening
		desc = pet_dragon.2005.desc
	}
	theme = pet
	left_portrait = {
		character = root
		animation = grief
	}

	immediate = {
		play_music_cue = "mx_cue_prison"
	}

	option = {
		name = pet_dragon.2005.a
		show_as_tooltip = {
			remove_cat_story_modifiers_effect = yes
			remove_dragon_story_modifiers_effect = yes
		}
		scope:cat_story = {
			hidden_effect = { end_story = yes }
		}
		scope:dragon_story = {
			hidden_effect = { end_story = yes }
		}
	}

	after = {
		remove_character_flag = cat_is_dying
		remove_character_flag = dragon_is_dying
	}
}

#They work it out
#by Linnéa Thimrén
pet_dragon.2006 = {
	type = character_event
	title = pet_dragon.2002.t
	desc = {
		desc = pet_dragon.2005.desc_opening
		desc = pet_dragon.2006.desc
	}
	theme = pet
	left_portrait = {
		character = root
		animation = happiness
	}

	option = {
		name = pet_dragon.2006.a
		add_stress = minor_stress_loss
	}
}



#########################
#########################
## OTHER PEOPLE HAVE PETS
#########################
#########################

#A rival has a cat...
#by Linnéa Thimrén
pet_dragon.5001 = {
	type = character_event
	title = pet_dragon.5001.t
	desc = pet_dragon.5001.desc
	theme = pet
	override_background = {
		event_background = farmland
	}
	left_portrait = scope:rival
	
	trigger = {
		NOR = {
			has_character_flag = had_pet_dragon_animal_5001_event
			has_character_flag = had_pet_dragon_animal_5002_event
		}
		any_relation = {
			type = rival
			is_ai = yes
			any_owned_story = {
				story_type = story_cycle_pet_cat
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_5001_event
			years = 40
		}
		random_relation = {
			type = rival
			limit = {
				is_ai = yes
				any_owned_story = {
					story_type = story_cycle_pet_cat
				}
			}
			save_scope_as = rival

			random_owned_story = {
				limit = {
					story_type = story_cycle_pet_cat
				}
				save_scope_as = rival_cat_story
			}

			capital_province = {
				save_scope_as = rival_home
			}
		}
	}

	option = { #Kill it
		name = pet_dragon.5001.a
		flavor = pet_dragon.5001.a.tt
		show_as_tooltip = {
			scope:rival = { remove_cat_story_modifiers_effect = yes }
		}
		scope:rival_cat_story = {
			hidden_effect = { end_story = yes }
		}
		stress_impact = {
			compassionate = major_stress_impact_gain
			sadistic = medium_stress_impact_loss
		}
	}

	option = { #Pet it!
		name = pet_dragon.5001.b
		add_stress = medium_stress_loss
	}
}

#A rival has a dragon...
#by Linnéa Thimrén
pet_dragon.5002 = {
	type = character_event
	title = pet_dragon.5002.t
	desc = pet_dragon.5002.desc
	theme = pet
	override_background = {
		event_background = farmland
	}
	left_portrait = scope:rival
	
	trigger = {
		NOR = {
			has_character_flag = had_pet_dragon_animal_5001_event
			has_character_flag = had_pet_dragon_animal_5002_event
		}
		any_relation = {
			type = rival
			is_ai = yes
			any_owned_story = {
				story_type = story_cycle_pet_dragon
			}
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_5002_event
			years = 40
		}
		random_relation = {
			type = rival
			limit = {
				is_ai = yes
				any_owned_story = {
					story_type = story_cycle_pet_dragon
				}
			}
			save_scope_as = rival

			random_owned_story = {
				limit = {
					story_type = story_cycle_pet_dragon
				}
				save_scope_as = rival_dragon_story
			}

			capital_province = {
				save_scope_as = rival_home
			}
		}
	}

	option = { #Kill it
		name = pet_dragon.5002.a
		flavor = pet_dragon.5001.a.tt
		show_as_tooltip = {
			scope:rival = { remove_dragon_story_modifiers_effect = yes }
		}
		scope:rival_dragon_story = {
			hidden_effect = { end_story = yes }
		}
		stress_impact = {
			compassionate = major_stress_impact_gain
			sadistic = medium_stress_impact_loss
		}
	}

	option = { #Pet it!
		name = pet_dragon.5002.b
		add_stress = medium_stress_loss
	}
}


#########################
#########################
## DOG DECISION EVENTS
#########################
#########################
#Events triggered from decisions about your animals

#You pet your dragon
#by Linnéa Thimrén
pet_dragon.6001 = {
	type = character_event
	title = pet_dragon.6001.t
	desc = pet_dragon.6001.desc
	theme = pet
	override_background = {
		event_background = sitting_room
	}
	left_portrait = {
		character = root
		animation = happiness
	}

	option = {
		name = pet_dragon.6001.a
		add_stress = minor_stress_loss
	}
}

#You pet your dragon v.2
#by Linnéa Thimrén
pet_dragon.6002 = {
	type = character_event
	title = pet_dragon.6001.t
	desc = pet_dragon.6002.desc
	theme = pet
	left_portrait = {
		character = root
		animation = happiness
	}

	option = {
		name = pet_dragon.6001.a
		add_stress = minor_stress_loss
	}
}

scripted_trigger pet_dragon_animal_6003_new_claim_trigger = {
	save_temporary_scope_as = target_county
	root = {
		NOT = {
			has_claim_on = scope:target_county
		}
		any_character_to_title_neighboring_county = {
			this = scope:target_county
		}
	}
}

scripted_trigger pet_dragon_animal_6003_neighboring_ruler_trigger = {
	save_temporary_scope_as = neighboring_ruler
	any_sub_realm_county = {
		pet_dragon_animal_6003_new_claim_trigger = yes
	}
}

#Your dragon finds a claim!
#by Alexander Oltner
pet_dragon.6003 = {
	type = character_event
	title = pet_dragon.6001.t
	desc = pet_dragon.6003.desc
	theme = pet
	left_portrait = {
		character = root
		animation = shock
	}
	right_portrait = {
		character = scope:neighboring_ruler
		animation = personality_rational
	}
	
	trigger = {
		any_neighboring_realm_same_rank_owner = {
			pet_dragon_animal_6003_neighboring_ruler_trigger = yes
		}
		NOT = { has_character_flag = had_pet_dragon_animal_6003_event } #Complete blockage since the event is so powerful
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_6003_event
			years = 10
		}
		random_neighboring_realm_same_rank_owner = {
			limit = {
				pet_dragon_animal_6003_neighboring_ruler_trigger = yes
			}
			save_scope_as = neighboring_ruler
			random_sub_realm_county = {
				limit = {
					pet_dragon_animal_6003_new_claim_trigger = yes
				}
				save_scope_as = target_county
			}
		}
	}

	option = {
		name = pet_dragon.6003.a
		add_unpressed_claim = scope:target_county
		stress_impact = {
			content = medium_stress_impact_gain
			honest = medium_stress_impact_gain
			just = medium_stress_impact_gain
			arrogant = minor_stress_loss
			ambitious = minor_stress_loss
			greedy = minor_stress_loss
		}
	}

	option = {
		name = pet_dragon.6003.b
		scope:neighboring_ruler = {
			add_opinion = {
				modifier = trust_opinion
				target = root
				opinion = 20
			}
		}
		progress_towards_friend_effect = { CHARACTER = scope:neighboring_ruler REASON = friend_returned_lost_scroll OPINION = 0 }
		stress_impact = {
			content = minor_stress_loss
			honest = medium_stress_loss
			just = minor_stress_loss
			greedy = medium_stress_impact_gain
			arrogant = medium_stress_impact_gain
			ambitious = major_stress_impact_gain
		}
	}
}


#Your dragon lashes out D:
#by Linnéa Thimrén
pet_dragon.6004 = {
	type = character_event
	title = pet_dragon.6001.t
	desc = pet_dragon.6004.desc
	theme = pet
	left_portrait = {
		character = root
		animation = shock
	}
	
	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_6004_event } #Complete blockage since the event is severe
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_6004_event
			years = 10
		}
		random_owned_story = {
			limit = {
				story_type = story_cycle_pet_dragon
			}
			save_scope_as = story
		}
		increase_wounds_effect = { REASON = dragon_attack }
	}

	option = {
		name = pet_dragon.6004.a
	}

	option = {
		name = pet_dragon.6004.b
		show_as_tooltip = {
			remove_dragon_story_modifiers_effect = yes
		}
		scope:story = {
			hidden_effect = { end_story = yes }
		}
	}
}


#########################
#########################
## CAT DECISION EVENTS
#########################
#########################

#You pet your cat
#by Linnéa Thimrén
pet_dragon.6051 = {
	type = character_event
	title = pet_dragon.6051.t
	desc = pet_dragon.6051.desc
	theme = pet
	override_background = {
		event_background = sitting_room
	}
	left_portrait = {
		character = root
		animation = happiness
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #No blockage, so the decision is available, but very unlikely with repetition
			add = -0.9
			has_character_flag = had_pet_dragon_animal_6051_event
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_6051_event
			years = 10
		}
	}

	option = {
		name = pet_dragon.6001.a
		add_stress = minor_stress_loss
	}
}

#You pet your cat v.2
#by Linnéa Thimrén
pet_dragon.6052 = {
	type = character_event
	title = pet_dragon.6051.t
	desc = pet_dragon.6052.desc
	theme = pet
	left_portrait = {
		character = root
		animation = happiness
	}
	
	weight_multiplier = {
		base = 1
		modifier = { #No blockage, so the decision is available, but very unlikely with repetition
			add = -0.9
			has_character_flag = had_pet_dragon_animal_6052_event
		}
	}

	immediate = {
		add_character_flag = {
			flag = had_pet_dragon_animal_6052_event
			years = 10
		}
	}

	option = {
		name = pet_dragon.6001.a
		add_stress = minor_stress_loss
	}
}

pet_dragon.6055 = { # Decide if your spouse can be allergic by Hugo Cortell
	hidden = yes
	# As suggested by Oltner, this event acts as a gateway to pet_dragon.0106
	# Culls down the number of allergic people by flagging some as resistant to allergies

	trigger = {
		NOT = { has_character_flag = had_pet_dragon_animal_0106_event }
		any_spouse = {
			is_available_ai = yes
			NOR = {
				has_character_modifier = cat_story_allergy_modifier
				has_character_flag = forbidden_from_pet_allergies
			}
		}
	}

	immediate = {
		random_list = {
			40 = { trigger_event = pet_dragon.0106 } # Allow spouse to be allergic
			60 = { # No allergens for you, mwahahaha!
				random_spouse = {
					limit = { NOT = { has_character_flag = forbidden_from_pet_allergies } } # If there are multiple spouses, this ensures it is assigned to a valid one
					add_character_flag = forbidden_from_pet_allergies
				}
			}
		}
	}
}
